function [omega]=woltring3d(R,Hz,dummy);% [omega]=woltring3d(R,Hz);% estimation of rotational velocity of a matrix% based on a paper by Woltring, but also described in Zatsiorsi page% 181-183% % % R is a three-dimensional matrix [i,j,k] in which k is time% program also uses afgnew3d, a numerical differentiation routine for% [i,j,k] matrices%% ([    'this function works for both standing and lying rotation matrices '%       'you need to decide for yourself which is the correct use:         '%       'the standard application is for a standing vector, if a lying     '%       'orientation is used, enter a (any) third inputargument            '])%   DirkJan Veeger, 14-10-2004 / 13-12-2006%  N=nargin;if ndims(R)~=3,    disp(['this is the wrong version: it is based on ixjxk matrices'])end[I,J,K]=size(R);% numerical filter of matrix elements (works best)  Rdot=afgnew3d(R,Hz);% calculation of ang. vel. following Woltringfor k=3:K-2,      if N~=3,          w = 0.5*(Rdot(:,:,k)*R(:,:,k)'-R(:,:,k)*Rdot(:,:,k)');          omega(:,k)=[w(3,2); w(1,3); w(2,1)];        else,          w = 0.5*(Rdot(:,:,k)'*R(:,:,k)-R(:,:,k)'*Rdot(:,:,k));          omega(:,k)=-[w(3,2); w(1,3); w(2,1)];           end        end% omega=[omega NaN(3,2)];omega(:,1:2)=NaN(3,2);omega=[omega zeros(3,2)];